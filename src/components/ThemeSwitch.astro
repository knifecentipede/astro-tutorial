---
---
<div class="theme-switch">

  <button id="themeSwitchButton">BIG EXPLOSION</button>
  <p class="test"><canvas id="explosion" width="128" height="80"></canvas></p>


  <style>
    .theme-switch{
      position:relative;
    }

    .themeSwitchButton{
      position:relative;
      z-index: 1;
    }

    #themeSwitchButton {
      text-align:center;
      height: 50px;
      width: 80px;
      }

    .test{
      pointer-events: none;
      z-index: 2;
      position:absolute;
      display:inline-flex;
      left:-20px;
      }
  </style>

  
<script is:inline>
  // ANIMATION
          let image = new Image();
          image.src = "explosion-3.png";
          
          //getContext describes what type of content the canvas has
          let canvas = document.querySelector("canvas");
          let context = canvas.getContext("2d");
          const width = 128;
          const height = 80;
          

          // draw a frame internal func
          function drawFrame(frameX, frameY, canvasX, canvasY) {
              context.drawImage(image,
                      frameX * width, frameY * height, width, height,
                      canvasX, canvasY, width, height);
          }

          let currentFrame = 0;
          const finalFrame = 10;
          let fpsCount = 0;
                  
          
          function step() {
              //slow down
              fpsCount++;
              if (fpsCount < 3) {
                  window.requestAnimationFrame(step);
                  return;
              }
              fpsCount = 0;
              
              // clear canvas
              context.clearRect(0, 0, canvas.width, canvas.height);

              // draw next frame
              drawFrame(currentFrame, 0, 0, 0);
              currentFrame++;

              // END RECURSION!!!!!!!
              if (currentFrame > finalFrame){
                  return;
              }

              window.requestAnimationFrame(step);
          }
          
          // start
          function init() {
              window.requestAnimationFrame(step);
              currentFrame = 0;
          }



    // THEME
    // check for existing preference file
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }  
        return 'light';
    })();
    // update theme file
    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }
    window.localStorage.setItem('theme', theme);
  

    const handleToggleClick = () => {
      // event switch theme
      const element = document.documentElement;
      element.classList.toggle("dark");
      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");      
    }
  
    // EVENT LISTNER
    document.getElementById("themeSwitchButton").addEventListener("click", handleToggleClick);
    document.getElementById("themeSwitchButton").addEventListener("click", init);

  </script>
</div>